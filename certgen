#!/bin/bash

set -o errexit

main() {
  local domain=$1

  if [[ -z "$domain" ]]; then
    echo "ERROR: A domain must be specified.

  Usage:  certgen [domain ...]

Aborting."
    exit 1
  fi

  set -o nounset

  generate_cert "$domain"
}

# Generates an OpenSSL configuration file that
# specifies some extra properties that we're not
# able to when running the command directly.
#
# note.: the main property we're configuring here is
# the alternate name. See more at the following addr:
# http://wiki.cacert.org/FAQ/subjectAltName
generate_openssl_conf_for_domain() {
  local domain=$1
  local conf_file=$(mktemp)

  echo "
[ req ]
req_extensions          = v3_req
distinguished_name      = req_distinguished_name
attributes		          = req_attributes

[ v3_req ]
subjectAltName          = @alt_names

[ alt_names ]
DNS.1                   = $domain

[ req_distinguished_name ]
[ req_attributes ]
" >$conf_file

  echo "$conf_file"
}

# Generates a set of 3 files - a private key, a certificate and the
# concatenation of these two (used by haproxy) - in the current
# working directory.
generate_cert() {
  local dir_name="."
  local domain=$1
  local key_name="key_$domain.pem"
  local cert_name="cert_$domain.pem"
  local haproxy_cert="haproxy_$domain.pem"
  local openssl_conf=$(generate_openssl_conf_for_domain $domain)

  echo "INFO:
  Starting certificate generation.
  
  DOMAIN=$domain
  KEY_NAME=$key_name
  CERT_NAME=$cert_name
  HAPROXY_CERT=$haproxy_cert
  OPENSSL_CONF=$openssl_conf
  "

  openssl req \
    -x509 \
    -sha256 \
    -newkey rsa:4096 \
    -keyout "$key_name" \
    -out "$cert_name" \
    -days 730 \
    -nodes \
    -config "$openssl_conf" \
    -extensions v3_req \
    -subj "/C=BR/ST=SaoPaulo/L=SaoPaulo/O=TestOrg/OU=TestUnit/CN=$domain"

  cat $key_name $cert_name >$haproxy_cert

  chmod 644 $haproxy_cert

  echo "
SUCCESS:
  Certificates successfully generated.

  You can inspect the certificate by issuing the following command:

    openssl x509 -in $cert_name -text -noout

Done.
  "
}

main "$@"
